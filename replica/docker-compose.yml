version: '3.8'

services:
  # PostgreSQL Database for IoT Replica
  replica-postgres:
    image: postgres:16-alpine
    container_name: replica-postgres
    ports:
      - "5433:5432"  # Exposed for external access from notebook/server
    environment:
      POSTGRES_USER: replica
      POSTGRES_PASSWORD: replica_password
      POSTGRES_DB: replica_db
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --data-checksums"
    volumes:
      - ./services/database/init_replica.sql:/docker-entrypoint-initdb.d/01-init-replica.sql:ro
      - replica_pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U replica -d replica_db -h localhost"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    networks:
      - replica-network

  # IoT MQTT-to-DB Sync Service
  iot-sync:
    build: ./services/mqtt-db-sync
    container_name: iot-sync
    environment:
      # MQTT Configuration - connects to notebook's MQTT broker
      MQTT_HOST: ${MQTT_BROKER_HOST:-192.168.1.6}  # Your notebook Wi-Fi IP
      MQTT_PORT: 1883
      MQTT_TOPIC_PREFIX: db
      
      # PostgreSQL Configuration - connects to replica database
      POSTGRES_HOST: replica-postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: replica
      POSTGRES_PASSWORD: replica_password
      POSTGRES_DB: replica_db
      
      # Logging
      PYTHONUNBUFFERED: 1
    depends_on:
      replica-postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - replica-network

  # Optional: PostgreSQL Admin Interface for replica
  replica-pgadmin:
    image: dpage/pgadmin4:latest
    container_name: replica-pgadmin
    ports:
      - "5051:80"  # Exposed for external access from notebook/server
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@replica.local
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - replica_pgadmin_data:/var/lib/pgadmin
    depends_on:
      - replica-postgres
    restart: unless-stopped
    networks:
      - replica-network

volumes:
  replica_pg_data:
  replica_pgadmin_data:

networks:
  replica-network:
    driver: bridge